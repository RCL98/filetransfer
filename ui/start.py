# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'startUpdated_2.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import json
import time
from copy import deepcopy
from socket import gethostname

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFrame

import logging
from ui import mainWindow
from ui.models.fileDialog import FileDialog
from ui.models.treeModel import TreeModelFile, FileSystem
from ui.models.workers import AddWorker, DeleteWorker


class VLine(QFrame):
    # a simple VLine, like the one you get from designer
    def __init__(self):
        super(VLine, self).__init__()
        self.setFrameShape(self.VLine | self.Sunken)


class UiStartWindow(object):
    def __init__(self, window):
        self.window = window
        self.centralWidget = QtWidgets.QWidget(StartWindow)
        self.gridLayout = QtWidgets.QGridLayout(self.centralWidget)
        self.mainFrame = QtWidgets.QFrame(self.centralWidget)
        self.mainGridLayout = QtWidgets.QGridLayout(self.mainFrame)
        self.leftFrame = QtWidgets.QFrame(self.mainFrame)
        self.leftVerticalLayout = QtWidgets.QVBoxLayout(self.leftFrame)
        self.noteFrame = QtWidgets.QFrame(self.leftFrame)
        self.noteVerticalLayout = QtWidgets.QVBoxLayout(self.noteFrame)
        self.noteLabel = QtWidgets.QLabel(self.noteFrame)
        self.downFrame = QtWidgets.QFrame(self.leftFrame)
        self.downVerticalLayout = QtWidgets.QVBoxLayout(self.downFrame)
        self.nameTextLabel = QtWidgets.QLabel(self.downFrame)
        self.acceptFrame = QtWidgets.QFrame(self.downFrame)
        self.acceptVerticalLayout = QtWidgets.QVBoxLayout(self.acceptFrame)
        self.nameFrame = QtWidgets.QFrame(self.acceptFrame)
        self.nameHorizontalLayout = QtWidgets.QHBoxLayout(self.nameFrame)
        self.nameLabel = QtWidgets.QLabel(self.nameFrame)
        self.nameEdit = QtWidgets.QLineEdit(self.nameFrame)
        self.acceptButton = QtWidgets.QPushButton(self.acceptFrame)
        self.rightFrame = QtWidgets.QFrame(self.mainFrame)
        self.rightVerticalLayout = QtWidgets.QVBoxLayout(self.rightFrame)
        self.buttonsFrame = QtWidgets.QFrame(self.rightFrame)
        self.buttonsHorizontalLayout = QtWidgets.QHBoxLayout(self.buttonsFrame)
        self.openButton = QtWidgets.QPushButton(self.buttonsFrame)
        self.saveButton = QtWidgets.QPushButton(self.buttonsFrame)
        self.saveAsButton = QtWidgets.QPushButton(self.buttonsFrame)
        self.undoButton = QtWidgets.QPushButton(self.buttonsFrame)
        self.redoButton = QtWidgets.QPushButton(self.buttonsFrame)
        self.addButton = QtWidgets.QPushButton(self.buttonsFrame)
        self.deleteButton = QtWidgets.QPushButton(self.buttonsFrame)
        self.treeFileFrame = QtWidgets.QFrame(self.rightFrame)
        self.treeGridLayout = QtWidgets.QGridLayout(self.treeFileFrame)
        self.treeView = QtWidgets.QTreeView(self.treeFileFrame)
        self.statusBar = QtWidgets.QStatusBar(StartWindow)
        self.progressWidget = QtWidgets.QWidget()
        self.progHorizontalLayout = QtWidgets.QHBoxLayout()
        self.progressBar = QtWidgets.QProgressBar()
        self.progressLabel = QtWidgets.QLabel()
        self.currentTreeFile = "..\\files\\user_tree.json"
        self.fileTreeModel = None
        self.lastSaveFile = None
        self.fileSystem = FileSystem()
        self.progressValue = 0
        self.undoStack = []
        self.redoStack = []
        self.thread = None
        self.worker = None
        self.setupUi()

    def renderTree(self):
        self.fileTreeModel = TreeModelFile(parent=self.treeView, treeInput=self.currentTreeFile)
        self.treeView.setModel(self.fileTreeModel)
        self.treeView.resizeColumnToContents(0)

    def acceptAction(self):
        mainWin = QtWidgets.QMainWindow()
        mainWindow.Ui_MainWindow(mainWin)
        self.window.close()
        mainWin.show()

    def addAction(self):
        self.addButton.setEnabled(False)
        fileDialog = FileDialog()
        if fileDialog.exec_() == QtWidgets.QDialog.Accepted:
            try:
                self.thread = QtCore.QThread()
                self.worker = AddWorker(self.currentTreeFile, len(self.undoStack), fileDialog.selectedFiles())
                self.worker.moveToThread(self.thread)

                self.thread.started.connect(self.worker.run)
                self.worker.finished.connect(self.thread.quit)
                self.worker.finished.connect(self.worker.deleteLater)
                self.thread.finished.connect(self.thread.deleteLater)
                self.worker.statusBarMessage.connect(self.setStatusBarMessage)
                self.worker.progressBarValue.connect(self.setProgressBarValue)
                self.worker.stackAdd.connect(self.fillActionStack)

                self.thread.start()
                self.thread.finished.connect(self.renderTree)
                self.thread.finished.connect(
                    lambda: self.addButton.setEnabled(True)
                )
            except Exception as e:
                print(e)
                self.addButton.setEnabled(True)

    def deleteAction(self):
        self.deleteButton.setEnabled(False)
        try:
            self.thread = QtCore.QThread()
            self.worker = DeleteWorker(self.currentTreeFile, len(self.undoStack), self.fileTreeModel)
            self.worker.moveToThread(self.thread)

            self.thread.started.connect(self.worker.run)
            self.worker.finished.connect(self.thread.quit)
            self.worker.finished.connect(self.worker.deleteLater)
            self.thread.finished.connect(self.thread.deleteLater)
            self.worker.statusBarMessage.connect(self.setStatusBarMessage)
            self.worker.progressBarValue.connect(self.setProgressBarValue)
            self.worker.stackAdd.connect(self.fillActionStack)

            self.thread.start()
            self.thread.finished.connect(self.renderTree)
            self.thread.finished.connect(
                lambda: self.deleteButton.setEnabled(True)
            )
        except Exception as e:
            print(e)
            self.deleteButton.setEnabled(True)

    def swapActions(self, treeFile):
        with open(treeFile, "r+") as jStackFile:
            newDict = json.load(jStackFile)
            with open(self.currentTreeFile, "r+") as jCurrentFile:
                oldDict = json.load(jCurrentFile)
                jCurrentFile.seek(0)
                jCurrentFile.truncate()
                json.dump(newDict, jCurrentFile)
            jStackFile.seek(0)
            jStackFile.truncate()
            json.dump(oldDict, jStackFile)
        self.renderTree()

    def fillActionStack(self, action: str):
        self.undoStack.append(action)

    def undoAction(self):
        if self.undoStack:
            treeFile = self.undoStack.pop()
            self.swapActions(treeFile)
            self.redoStack.append(treeFile)

    def redoAction(self):
        if self.redoStack:
            treeFile = self.redoStack.pop()
            self.swapActions(treeFile)
            self.undoStack.append(treeFile)

    def saveFile(self):
        try:
            with open(self.lastSaveFile, "w") as saveFile:
                with open(self.currentTreeFile, "r") as jFile:
                    currentState = json.load(jFile)
                json.dump(currentState, saveFile)
        except Exception as e:
            print(e)
            self.lastSaveFile = None

    def saveAsAction(self):
        self.lastSaveFile, _ = QtWidgets.QFileDialog.getSaveFileName(parent=self.centralWidget,
                                                                     caption='Save As', filter='JSON (*.json)')
        self.saveFile()

    def saveAction(self):
        if not self.lastSaveFile:
            self.saveAsAction()
        else:
            self.saveFile()

    def openAction(self):
        newFile, _ = QtWidgets.QFileDialog.getOpenFileName(parent=self.centralWidget, caption='Open',
                                                           filter='JSON (*.json)')
        print(newFile)
        try:
            with open(newFile, "r+") as jFile:
                tree = json.load(jFile)
                treeCopy = deepcopy(tree)
                inconsistencies = self.fileSystem.checkTreeIntegrity(treeCopy)
                jFile.seek(0)
                jFile.truncate()
                json.dump(treeCopy, jFile)
            self.currentTreeFile = newFile
            self.renderTree()
        except Exception as e:
            print(e)
        time.sleep(1)
        self.statusBar.showMessage('Ready')
        self.progressBar.setValue(0)

    def setStatusBarMessage(self, message: str):
        # print(message)
        self.statusBar.showMessage(message)

    def setProgressBarValue(self, value: int):
        self.progressBar.setValue(value)

    def setupUi(self):
        self.window.setObjectName("StartWindow")
        StartWindow.resize(1127, 688)
        self.centralWidget.setObjectName("centralWidget")
        self.gridLayout.setObjectName("gridLayout")

        self.mainFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.mainFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.mainFrame.setObjectName("mainFrame")
        self.mainGridLayout.setObjectName("mainGridLayout")

        self.leftFrame.setObjectName("leftFrame")
        self.leftVerticalLayout.setObjectName("leftVerticalLayout")
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.leftVerticalLayout.addItem(spacerItem)
        self.noteFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.noteFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.noteFrame.setObjectName("noteFrame")
        self.noteVerticalLayout.setObjectName("noteVerticalLayout")
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(10)
        self.noteLabel.setFont(font)
        self.noteLabel.setScaledContents(True)
        self.noteLabel.setWordWrap(True)
        self.noteLabel.setObjectName("noteLabel")
        self.noteVerticalLayout.addWidget(self.noteLabel)
        self.leftVerticalLayout.addWidget(self.noteFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.downFrame.sizePolicy().hasHeightForWidth())
        self.downFrame.setSizePolicy(sizePolicy)
        self.downFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.downFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.downFrame.setObjectName("downFrame")
        self.downVerticalLayout.setObjectName("downVerticalLayout")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nameTextLabel.sizePolicy().hasHeightForWidth())
        self.nameTextLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(10)
        self.nameTextLabel.setFont(font)
        self.nameTextLabel.setScaledContents(True)
        self.nameTextLabel.setWordWrap(True)
        self.nameTextLabel.setObjectName("nameTextLabel")
        self.downVerticalLayout.addWidget(self.nameTextLabel)
        self.acceptFrame.setObjectName("acceptFrame")
        self.acceptVerticalLayout.setObjectName("acceptVerticalLayout")
        self.nameFrame.setObjectName("nameFrame")
        self.nameHorizontalLayout.setObjectName("nameHorizontalLayout")
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(10)
        self.nameLabel.setFont(font)
        self.nameLabel.setObjectName("nameLabel")
        self.nameHorizontalLayout.addWidget(self.nameLabel)
        self.nameEdit.setObjectName("nameEdit")
        self.nameEdit.setPlaceholderText(gethostname())
        self.nameHorizontalLayout.addWidget(self.nameEdit)
        self.acceptVerticalLayout.addWidget(self.nameFrame)
        font = QtGui.QFont()
        font.setFamily("Verdana")
        font.setPointSize(9)
        self.acceptButton.setFont(font)
        self.acceptButton.setObjectName("acceptButton")
        self.acceptVerticalLayout.addWidget(self.acceptButton)
        self.downVerticalLayout.addWidget(self.acceptFrame)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.downVerticalLayout.addItem(spacerItem1)
        self.leftVerticalLayout.addWidget(self.downFrame)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.leftVerticalLayout.addItem(spacerItem2)
        self.mainGridLayout.addWidget(self.leftFrame, 0, 0, 1, 1)

        self.rightFrame.setObjectName("rightFame")
        self.rightVerticalLayout.setSpacing(0)
        self.rightVerticalLayout.setObjectName("rightVerticalLayout")
        self.buttonsFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.buttonsFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.buttonsFrame.setObjectName("buttonsFrame")
        self.buttonsHorizontalLayout.setContentsMargins(-1, -1, -1, 0)
        self.buttonsHorizontalLayout.setSpacing(7)
        self.buttonsHorizontalLayout.setObjectName("buttonsHorizontalLayout")

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.openButton.sizePolicy().hasHeightForWidth())
        self.openButton.setSizePolicy(sizePolicy)
        self.openButton.setObjectName("openButton")
        self.buttonsHorizontalLayout.addWidget(self.openButton)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.saveButton.sizePolicy().hasHeightForWidth())
        self.saveButton.setSizePolicy(sizePolicy)
        self.saveButton.setObjectName("saveButton")
        self.buttonsHorizontalLayout.addWidget(self.saveButton)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.saveAsButton.sizePolicy().hasHeightForWidth())
        self.saveAsButton.setSizePolicy(sizePolicy)
        self.saveAsButton.setObjectName("saveAsButton")
        self.buttonsHorizontalLayout.addWidget(self.saveAsButton)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.undoButton.sizePolicy().hasHeightForWidth())
        self.undoButton.setSizePolicy(sizePolicy)
        self.undoButton.setObjectName("undoButton")
        self.buttonsHorizontalLayout.addWidget(self.undoButton)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.redoButton.sizePolicy().hasHeightForWidth())
        self.redoButton.setSizePolicy(sizePolicy)
        self.redoButton.setObjectName("redoButton")
        self.buttonsHorizontalLayout.addWidget(self.redoButton)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)

        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.addButton.sizePolicy().hasHeightForWidth())
        self.addButton.setSizePolicy(sizePolicy)
        self.addButton.setObjectName("addButton")
        self.buttonsHorizontalLayout.addWidget(self.addButton)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deleteButton.sizePolicy().hasHeightForWidth())
        self.deleteButton.setSizePolicy(sizePolicy)
        self.deleteButton.setObjectName("deleteButton")
        self.buttonsHorizontalLayout.addWidget(self.deleteButton)

        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.buttonsHorizontalLayout.addItem(spacerItem3)
        self.rightVerticalLayout.addWidget(self.buttonsFrame)
        self.treeFileFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.treeFileFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.treeFileFrame.setObjectName("treeFrame")
        self.treeGridLayout.setContentsMargins(-1, 0, -1, -1)
        self.treeGridLayout.setObjectName("treeGridLayout")
        self.treeView.setObjectName("treeView")
        self.treeGridLayout.addWidget(self.treeView, 0, 0, 1, 1)
        self.rightVerticalLayout.addWidget(self.treeFileFrame)
        self.mainGridLayout.addWidget(self.rightFrame, 0, 1, 1, 1)
        self.gridLayout.addWidget(self.mainFrame, 0, 0, 1, 1)
        StartWindow.setCentralWidget(self.centralWidget)
        self.statusBar.setObjectName("statusBar")
        self.statusBar.reformat()
        self.statusBar.setStyleSheet('border: 0; background-color: #FFF8DC;')
        self.statusBar.setStyleSheet("QStatusBar::item {border: none;}")
        StartWindow.setStatusBar(self.statusBar)
        self.progHorizontalLayout.setObjectName('progHorizontalLayout')
        self.progressWidget.setLayout(self.progHorizontalLayout)
        self.progressWidget.setMaximumWidth(450)
        self.progressWidget.layout().addWidget(self.progressLabel)
        self.progressWidget.layout().addWidget(self.progressBar)
        self.progressBar.setMaximumWidth(350)
        self.progressBar.setObjectName("progressBar")
        self.progressBar.setValue(0)
        self.progressLabel.setObjectName("progressLabel")
        self.progressLabel.setText("Progress:")
        self.statusBar.showMessage("Ready")
        self.statusBar.addPermanentWidget(VLine())
        self.statusBar.addPermanentWidget(self.progressWidget)
        self.statusBar.addPermanentWidget(VLine())

        self.fileTreeModel = TreeModelFile(parent=self.treeView, treeInput=self.currentTreeFile)
        self.treeView.setModel(self.fileTreeModel)
        self.treeView.resizeColumnToContents(0)
        self.retranslateUi()

        self.acceptButton.clicked.connect(self.acceptAction)
        self.addButton.clicked.connect(self.addAction)
        self.deleteButton.clicked.connect(self.deleteAction)
        self.undoButton.clicked.connect(self.undoAction)
        self.redoButton.clicked.connect(self.redoAction)
        self.saveButton.clicked.connect(self.saveAction)
        self.saveAsButton.clicked.connect(self.saveAsAction)
        self.openButton.clicked.connect(self.openAction)

        QtCore.QMetaObject.connectSlotsByName(StartWindow)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.window.setWindowTitle(_translate("StartWindow", "FileTransfer"))
        self.noteLabel.setText(
            _translate(
                "StartWindow",
                '<html><head/><body><p align="center"><span style=" font-size:10pt; text-decoration: underline;">Note</span><span style=" font-size:10pt;">: You are not required to submit files for distribution in order to use the aplication.</span></p></body></html>',
            )
        )
        self.nameTextLabel.setText(
            _translate(
                "StartWindow",
                '<html><head/><body><p align="center">This is the name that will appear to the other users. By default the chosen name is the name of the machine.</p></body></html>',
            )
        )
        self.nameLabel.setText(_translate("StartWindow", "Name:"))
        self.acceptButton.setText(_translate("StartWindow", "Accept"))
        self.openButton.setText(_translate("StartWindow", "Opem"))
        self.saveButton.setText(_translate("StartWindow", "Save"))
        self.saveAsButton.setText(_translate("StartWindow", "Save As"))
        self.undoButton.setText(_translate("StartWindow", "Undo"))
        self.redoButton.setText(_translate("StartWindow", "Redo"))
        self.addButton.setText(_translate("StartWindow", "Add"))
        self.deleteButton.setText(_translate("StartWindow", "Delete"))


if __name__ == "__main__":
    import sys

    logging.basicConfig(level='INFO')
    app = QtWidgets.QApplication(sys.argv)
    StartWindow = QtWidgets.QMainWindow()
    ui = UiStartWindow(StartWindow)
    StartWindow.show()
    sys.exit(app.exec_())
